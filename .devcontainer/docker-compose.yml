version: '3.8'

services:
  app: # This is your main development container
    build:
      context: . # Use the .devcontainer folder as context for Dockerfile
      dockerfile: Dockerfile
    
    # Mount your entire project folder into the container
    # The source is relative to the docker-compose.yml file
    # The target is where Codespaces typically puts your code
    volumes:
      - ..:/workspaces/${localWorkspaceFolderBasename}:cached 

    # Keep the container running
    command: sleep infinity

    # Expose ports that your applications will listen on
    # Codespaces will automatically forward these.
    # Backend API (e.g., .NET Core defaults)
    # Frontend dev server (e.g., React default)
    # These are NOT mapped to host ports here, Codespaces handles it.
    # We'll define explicit forwarding in devcontainer.json for clarity.

    depends_on:
      - db # Ensure MySQL starts before your app might try to connect

    environment:
      # Example: For .NET Core to connect to MySQL
      # These will be available to your backend application
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: myappdb
      DB_USER: root
      DB_PASSWORD: yourstrongpassword # Change this!
      # For React app to find the backend (will be set in postCreateCommand)
      # REACT_APP_API_BASE_URL will be dynamically generated

    networks:
      - devnetwork

  db: # MySQL service
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: yourstrongpassword # Change this!
      MYSQL_DATABASE: myappdb
      # MYSQL_USER: myappuser (optional, create a dedicated user)
      # MYSQL_PASSWORD: myappuserpass (optional)
    volumes:
      - mysql_data:/var/lib/mysql # Persist database data
    # No need to expose ports to host here, 'app' service connects via network 'devnetwork' on port 3306
    # If you wanted to connect from your local machine (outside Codespaces) to this MySQL,
    # you'd add:
    # ports:
    #   - "3306:3306" 
    # But for Codespaces, internal communication is fine.
    networks:
      - devnetwork

volumes:
  mysql_data: # Named volume for MySQL data persistence

networks:
  devnetwork:
    driver: bridge