// Codebase/.devcontainer/devcontainer.json
{
  "name": "Student Management App - Dev Environment",
  "image": "mcr.microsoft.com/devcontainers/universal:2",

  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/dotnet:2": { "version": "8.0" },
    "ghcr.io/devcontainers/features/node:1": { "version": "20" }
  },

  "customizations": {
    "vscode": {
      "extensions": [
        "ms-dotnettools.csdevkit", "ms-dotnettools.csharp", "ms-vscode.vscode-docker",
        "humao.rest-client", "esbenp.prettier-vscode", "dbaeumer.vscode-eslint"
      ]
    }
  },

  "forwardPorts": [ 5001, 3000, 3307 ],

  // Assuming the WORKSPACE FOLDER in Codespaces IS your 'Codebase' directory.
  // If 'Codebase' is a sub-directory, adjust paths like 'cd Codebase && ...'
  "postCreateCommand": "echo 'Codespace created. Setting up...' && sudo chown vscode:vscode -R . && dotnet tool install --global dotnet-ef && (cd frontend && npm install) && echo 'Project setup complete. Use: docker compose up'",

  "postStartCommand": "echo 'Starting database service...' && docker compose up -d db",

  "postAttachCommand": {
    "message": "Welcome! Database service should be starting. Use 'docker compose up backend frontend' to start your app services."
  },

  "remoteUser": "vscode"
}