//{
//  "Logging": {
//    "LogLevel": {
//      "Default": "Information",
//      "Microsoft.AspNetCore": "Warning"
//    }
//  },
{
  // --- Add Serilog Configuration ---
  "Serilog": {
    "MinimumLevel": {
      // Default level for all sources if not overridden
      "Default": "Information",
      // Override levels for specific noisy sources (like EF Core commands)
      "Override": {
        "Microsoft": "Warning", // Reduce ASP.NET Core noise
        "Microsoft.Hosting.Lifetime": "Information", // Keep startup/shutdown info
        "Microsoft.EntityFrameworkCore": "Warning", // General EF Core logs
        "Microsoft.EntityFrameworkCore.Database.Command": "Information" // Log SQL commands in dev, set to Warning/Error in prod
      }
    },
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ], // Useful enrichers
    "WriteTo": [
      // Log to Console sink
      { "Name": "Console" },
      // Log to File sink
      {
        "Name": "File",
        "Args": {
          // Path relative to the application's execution directory
          "path": "logs/api-log-.log",
          // Create a new log file daily
          "rollingInterval": "Day",
          // Keep logs for 7 days (adjust as needed)
          "retainedFileCountLimit": 7,
          // Template for log messages
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] [{SourceContext}] {Message:lj}{NewLine}{Exception}"
          // Optional: File size limit
          // "fileSizeLimitBytes": 104857600, // ~100MB
          // Optional: Roll on file size limit reached
          // "rollOnFileSizeLimit": true
        }
      }
      // Add other sinks here (e.g., Seq, Application Insights, Elasticsearch)
      // { "Name": "Seq", "Args": { "serverUrl": "http://localhost:5341" } }
    ]
    // Properties can add global context (e.g., ApplicationName)
    // "Properties": {
    //   "Application": "StudentIdMgmt.Api"
    // }
  },
  // --- End Serilog Configuration ---
  "ConnectionStrings": {
    // "DB_HOST", "DB_PORT", etc. are from docker-compose.yml environment variables
    "DefaultConnection": "Server=${DB_HOST};Port=${DB_PORT};Database=${DB_DATABASE};User=${DB_USER};Password=${DB_PASSWORD};AllowPublicKeyRetrieval=True"
  },
  "JwtSettings": {
    // IMPORTANT: Use a strong, randomly generated secret key and store it securely!
    // For development, User Secrets is good. Don't commit secrets to source control.
    // Example command: dotnet user-secrets set "JwtSettings:Key" "YourSuperSecretAndLongKeyHereAtLeast32Chars" --project src/StudentIdMgmt.Api
    "Key": "m7jX0RGs8n4bZp+xm3iTxr+X3VRi+WzF1iUCZf06MBUI92eH9dR1V5R9Xc8U8KXaz18ClypEzWjw+NyErKkKUg==", //"REPLACE_WITH_YOUR_SECRET_KEY_FROM_USER_SECRETS_OR_ENV_VAR",
    "Issuer": "StudentIdMgmtApi", // Identifies who issued the token
    "Audience": "StudentIdMgmtApp", // Identifies the intended recipient(s) of the token
    "DurationInMinutes": 60 // Token validity period
  },
  // --- Add File Storage Settings ---
  "FileStorageSettings": {
    "StorageType": "Local", // Use "Local" for now
    // IMPORTANT: Define where photos are stored.
    // If serving directly via web server (e.g., Kestrel, IIS), place under wwwroot.
    // If serving via a dedicated endpoint, can be outside wwwroot.
    // Ensure write permissions for the application process.
    //"LocalStorageBasePath": "wwwroot/uploads/student-photos" // Example path within wwwroot
    "LocalStorageBasePath": "D:/Projects/Core/StudentManagement/CodeBase/Resources/Images" // Example path outside web root
  },
  "AllowedFrontendUrls": [
    "http://localhost:3000",
    "http://localhost:5173"
  ],
  "AllowedOrigins": [
    "https://localhost:3000",
    "https://localhost:5173"
  ]
  // --- End File Storage Settings ---
}
